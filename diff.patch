diff --git a/.github/workflows/Dockerfile.buster b/.github/workflows/Dockerfile.buster
index b326a45d..5a5dea6d 100644
--- a/.github/workflows/Dockerfile.buster
+++ b/.github/workflows/Dockerfile.buster
@@ -16,16 +16,17 @@ RUN apt-get update && \
     rm -f "$TEMP_DEB" && \
     echo "deb http://apt.postgresql.org/pub/repos/apt buster-pgdg main" > /etc/apt/sources.list.d/pgdg.list && \
     wget -qO - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add - && \
-    apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 467B942D3A79BD29 && \
+    apt-key adv --keyserver keyserver.ubuntu.com --recv-keys B7B3B788A8D3785C && \
     apt-get update && \
     apt-get install -y --no-install-recommends \
       git unzip libssl-dev cmake-data=3.18* cmake=3.18* make g++ gperf netcat \
       python3.7 python3-dev libpython3-dev python3-pip python3-setuptools mysql-server libmysqlclient-dev && \
+    wget https://github.com/curl/curl/releases/download/curl-8_4_0/curl-8.4.0.zip && unzip curl-8.4.0.zip && cd curl-8.4.0 && ./configure --disable-shared --with-openssl --disable-lpad --disable-ldaps && make -j$(nproc) && make install && cd .. && \
+    mkdir /opt/curl840 && mkdir /opt/curl840/lib && mkdir /opt/curl840/include && cp /usr/local/lib/libcurl.a /opt/curl840/lib/ && cp -R /usr/local/include/curl/ /opt/curl840/include/ && \
     pip3 install -r /tmp/requirements.txt && \
-    apt-get install -y --no-install-recommends curl-kphp-vk kphp-timelib libuber-h3-dev libfmt-dev libgtest-dev libgmock-dev libre2-dev libpcre3-dev \
+    apt-get install -y --no-install-recommends kphp-timelib libuber-h3-dev libfmt-dev libgtest-dev libgmock-dev libre2-dev libpcre3-dev \
       libzstd-dev libyaml-cpp-dev libnghttp2-dev zlib1g-dev php7.4-dev libldap-dev libkrb5-dev \
       postgresql postgresql-server-dev-all libnuma-dev composer && \
-    cp -R /opt/curl7600 /opt/curl840 && \
     rm -rf /var/lib/apt/lists/* && \
     update-alternatives --set php /usr/bin/php7.4
 
diff --git a/.github/workflows/Dockerfile.focal b/.github/workflows/Dockerfile.focal
index 255e51a8..b0099cc2 100644
--- a/.github/workflows/Dockerfile.focal
+++ b/.github/workflows/Dockerfile.focal
@@ -12,10 +12,12 @@ RUN apt-get update && \
     add-apt-repository ppa:deadsnakes/ppa && \
     apt-get update && \
     apt-get install -y --no-install-recommends \
-      git cmake make clang g++ g++-10 gperf netcat \
+      git unzip cmake make clang g++ g++-10 gperf netcat \
       python3.7 python3-pip python3.7-distutils python3.7-dev libpython3.7-dev python3-jsonschema python3-setuptools mysql-server libmysqlclient-dev && \
+    wget https://github.com/curl/curl/releases/download/curl-8_4_0/curl-8.4.0.zip && unzip curl-8.4.0.zip && cd curl-8.4.0 && ./configure --disable-shared --with-openssl --disable-lpad --disable-ldaps && make -j$(nproc) && make install && cd .. && \
+    mkdir /opt/curl840 && mkdir /opt/curl840/lib && mkdir /opt/curl840/include && cp /usr/local/lib/libcurl.a /opt/curl840/lib/ && cp -R /usr/local/include/curl/ /opt/curl840/include/ && \
     python3.7 -m pip install pip && python3.7 -m pip install -r /tmp/requirements.txt && \
-    apt-get install -y --no-install-recommends curl-kphp-vk kphp-timelib libuber-h3-dev libfmt-dev libgtest-dev libgmock-dev libre2-dev libpcre3-dev \
+    apt-get install -y --no-install-recommends kphp-timelib libuber-h3-dev libfmt-dev libgtest-dev libgmock-dev libre2-dev libpcre3-dev \
       libzstd-dev libyaml-cpp-dev libnghttp2-dev zlib1g-dev php7.4-dev libldap-dev libkrb5-dev \
       postgresql postgresql-server-dev-all libnuma-dev composer unzip && \
     rm -rf /var/lib/apt/lists/*
diff --git a/builtin-functions/_functions.txt b/builtin-functions/_functions.txt
index b3de198a..1b1f2a0a 100644
--- a/builtin-functions/_functions.txt
+++ b/builtin-functions/_functions.txt
@@ -1281,7 +1281,6 @@ define('CURLOPT_NOSIGNAL', 200131);
 define('CURLOPT_PATH_AS_IS', 200132);
 define('CURLOPT_PIPEWAIT', 200133);
 define('CURLOPT_SASL_IR', 200134);
-
 define('CURLOPT_EXPECT_100_TIMEOUT_MS', 200135);
 define('CURLOPT_HAPPY_EYEBALLS_TIMEOUT_MS', 200136);
 define('CURLOPT_HEADEROPT', 200137);
@@ -1299,8 +1298,8 @@ define('CURLOPT_PROXY_SSL_VERIFYPEER', 200147);
 define('CURLOPT_SUPPRESS_CONNECT_HEADERS', 200148);
 define('CURLOPT_TCP_FASTOPEN', 200149);
 define('CURLOPT_TFTP_NO_OPTIONS', 200150);
-define('CURLOPT_SSH_COMPRESSION', 200151); // don't work (kphp failed)
-define('CURLOPT_SSL_FALSESTART', 200152); // work only on IOS with TLS backend (will be removed)
+define('CURLOPT_SSH_COMPRESSION', 200151);
+define('CURLOPT_SSL_FALSESTART', 200152);
 define('CURLOPT_HTTP09_ALLOWED', 200153);
 define('CURLOPT_MAIL_RCPT_ALLLOWFAILS', 200154);
 define('CURLOPT_MAXAGE_CONN', 200155);
@@ -1311,25 +1310,24 @@ define('CURLOPT_SSL_OPTIONS', 200159);
 define('CURLOPT_PROXY_SSL_OPTIONS', 200160);
 define('CURLOPT_PROXY_SSL_VERIFYHOST', 200161);
 define('CURLOPT_PROXY_SSLVERSION', 200162); // without CURL_SSLVERSION_MAX_* options
-define('CURLOPT_STREAM_WEIGHT', 200163); // don't work (kphp failed)
+define('CURLOPT_STREAM_WEIGHT', 200163);
 define('CURLOPT_TIMEVALUE', 200164);
 define('CURLOPT_TIMECONDITION', 200165);
 define('CURLOPT_TIMEVALUE_LARGE', 200166);
 define('CURLOPT_UPKEEP_INTERVAL_MS', 200167);
 define('CURLOPT_UPLOAD_BUFFERSIZE', 200168);
-define('CURLOPT_SSH_AUTH_TYPES', 200169); // kphp-curl doesn't support this option
+define('CURLOPT_SSH_AUTH_TYPES', 200169);
 // new slist options
 define('CURLOPT_CONNECT_TO', 200170);
 define('CURLOPT_PROXYHEADER', 200171);
 // new string options
-define('CURLOPT_ENCODING', 200172); 
-// curl must be build with zlib for decompressing gzip, with brotli – for brotli, with zstd – for zstd
+define('CURLOPT_ENCODING', 200172);
 define('CURLOPT_ACCEPT_ENCODING', CURLOPT_ENCODING);
 define('CURLOPT_ABSTRACT_UNIX_SOCKET', 200173);
 define('CURLOPT_DEFAULT_PROTOCOL', 200174);
 define('CURLOPT_DNS_INTERFACE', 200175);
-define('CURLOPT_DNS_LOCAL_IP4', 200176); // curl must be build with c-ares library
-define('CURLOPT_DNS_LOCAL_IP6', 200177); // curl must be build with c-ares library
+define('CURLOPT_DNS_LOCAL_IP4', 200176);
+define('CURLOPT_DNS_LOCAL_IP6', 200177);
 define('CURLOPT_KEYPASSWD', 200178);
 define('CURLOPT_KRB4LEVEL', CURLOPT_KRBLEVEL);
 define('CURLOPT_LOGIN_OPTIONS', 200179);
@@ -1395,27 +1393,18 @@ define('CURLSSH_AUTH_HOST',      1<<2);
 define('CURLSSH_AUTH_KEYBOARD',  1<<3);
 
 // bitmasks for CURLAUTH options
-define('CURLAUTH_NONE',         0);
-define('CURLAUTH_BASIC',        1<<0);
-define('CURLAUTH_DIGEST',       1<<1);
-define('CURLAUTH_NEGOTIATE',    1<<2);
-define('CURLAUTH_GSSNEGOTIATE', CURLAUTH_NEGOTIATE);
-define('CURLAUTH_GSSAPI',       CURLAUTH_NEGOTIATE);
-define('CURLAUTH_NTLM',         1<<3);
-define('CURLAUTH_DIGEST_IE',    1<<4);
-define('CURLAUTH_ANYSAFE',      ~(CURLAUTH_BASIC|CURLAUTH_DIGEST_IE));
-define('CURLAUTH_ANY',          ~CURLAUTH_DIGEST_IE);
+define('CURLAUTH_NONE',   0);
+define('CURLAUTH_BASIC',  1<<0);
+define('CURLAUTH_DIGEST', 1<<1);
+define('CURLAUTH_GSSNEGOTIATE', 1<<2);
+define('CURLAUTH_NTLM',   1<<3);
+define('CURLAUTH_DIGEST_IE', 1<<4);
+define('CURLAUTH_ANYSAFE', ~(CURLAUTH_BASIC|CURLAUTH_DIGEST_IE));
+define('CURLAUTH_ANY', ~CURLAUTH_DIGEST_IE);
 
 // bitmasks for SSL options
 define('CURLSSLOPT_ALLOW_BEAST', 1<<0);
-// define('CURLSSLOPT_NO_REVOKE', 1<<1);
-// CURLSSLOPT_NO_REVOKE is only supported for Schannel (the native Windows SSL library)
-define('CURLSSLOPT_NO_PARTIALCHAIN', 1<<2);
-// define('CURLSSLOPT_REVOKE_BEST_EFFORT', 1<<3);
-// CURLSSLOPT_REVOKE_BEST_EFFORT is only supported for Schannel (the native Windows SSL library)
-define('CURLSSLOPT_NATIVE_CA', 1<<4);
-// define('CURLSSLOPT_AUTO_CLIENT_CERT', 1<<5);
-// CURLSSLOPT_AUTO_CLIENT_CERT is only supported for Schannel (the native Windows SSL library)
+define('CURLSSLOPT_NO_REVOKE',   1<<1);
 
 define('CURL_TIMECOND_NONE', 0);
 define('CURL_TIMECOND_IFMODSINCE', 1);
diff --git a/compiler/compiler.cpp b/compiler/compiler.cpp
index 25ec2cf3..98ff1101 100644
--- a/compiler/compiler.cpp
+++ b/compiler/compiler.cpp
@@ -248,7 +248,6 @@ bool compiler_execute(CompilerSettings *settings) {
     >> PassC<InlineDefinesUsagesPass>{}
     >> PassC<PreprocessEq3Pass>{}
     >> PassC<PreprocessExceptions>{}
-    >> PipeC<EarlyOptimizationF>{}
     >> SyncC<ParseAndApplyPhpdocF>{}
     // from this point, @param/@return are parsed in all functions, we can calculate and use assumptions
     // lambdas don't traverse this part of pipeline — they are processed by containing functions as vertices
@@ -256,6 +255,7 @@ bool compiler_execute(CompilerSettings *settings) {
     // do NOT insert any pipe before, see DeduceImplicitTypesAndCastsPass::check_function()
     >> PassC<DeduceImplicitTypesAndCastsPass>{}
     >> PipeC<InstantiateGenericsAndLambdasF>{} >> use_nth_output_tag<0>{}
+    >> PipeC<EarlyOptimizationF>{}
     >> SyncC<GenerateVirtualMethodsF>{}
     >> PipeC<ConvertInvokeToFuncCallF>{}
     >> PassC<CheckFuncCallsAndVarargPass>{}
diff --git a/runtime/curl.cpp b/runtime/curl.cpp
index c082c1e7..3881a3ff 100644
--- a/runtime/curl.cpp
+++ b/runtime/curl.cpp
@@ -504,16 +504,6 @@ void set_enumerated_option(const std::array<T, N> &options, EasyContext *easy_co
   }
 }
 
-void timecond_option_setter(EasyContext *easy_context, CURLoption option, const mixed &value) {
-  constexpr static auto options = vk::to_array(
-    {
-      CURL_TIMECOND_NONE,
-      CURL_TIMECOND_IFMODSINCE,
-      CURL_TIMECOND_IFUNMODSINCE
-    });
-  set_enumerated_option<0>(options, easy_context, option, value);
-}
-
 void proxy_type_option_setter(EasyContext *easy_context, CURLoption option, const mixed &value) {
   constexpr static auto options = vk::to_array(
     {
@@ -536,7 +526,7 @@ void ssl_version_option_setter(EasyContext *easy_context, CURLoption option, con
       CURL_SSLVERSION_TLSv1_1,
       CURL_SSLVERSION_TLSv1_2,
       CURL_SSLVERSION_SSLv2,
-      CURL_SSLVERSION_SSLv3
+      CURL_SSLVERSION_SSLv3,
     });
   set_enumerated_option<0>(options, easy_context, option, value);
 }
@@ -548,7 +538,7 @@ void proxy_ssl_version_option_setter(EasyContext *easy_context, CURLoption optio
       CURL_SSLVERSION_TLSv1,
       CURL_SSLVERSION_TLSv1_0,
       CURL_SSLVERSION_TLSv1_1,
-      CURL_SSLVERSION_TLSv1_2
+      CURL_SSLVERSION_TLSv1_2,
     });
   set_enumerated_option<0>(options, easy_context, option, value);
 }
@@ -889,7 +879,7 @@ bool curl_setopt(EasyContext *easy_context, int64_t option, const mixed &value)
       {CURLOPT_PROXY_SSLVERSION,          proxy_ssl_version_option_setter},
       {CURLOPT_STREAM_WEIGHT,             long_option_setter},
       {CURLOPT_TIMEVALUE,                 long_option_setter},
-      {CURLOPT_TIMECONDITION,             timecond_option_setter},
+      {CURLOPT_TIMECONDITION,             long_option_setter},
       {CURLOPT_TIMEVALUE_LARGE,           off_option_setter},
       {CURLOPT_UPKEEP_INTERVAL_MS,        long_option_setter},
       {CURLOPT_UPLOAD_BUFFERSIZE,         long_option_setter},
@@ -942,7 +932,6 @@ bool curl_setopt(EasyContext *easy_context, int64_t option, const mixed &value)
     easy_context->error_num = CURLE_OK;
     curl_option.option_setter(easy_context, curl_option.option, value);
   }
-  fprintf(stderr, "error num for option %d is %d\n", (int)option, (int)easy_context->error_num);
   return easy_context->error_num == CURLE_OK;
 }
 
diff --git a/tests/phpt/curl/2_curl_setopt.php b/tests/phpt/curl/2_curl_setopt.php
index 836a54a7..6f1031f9 100644
--- a/tests/phpt/curl/2_curl_setopt.php
+++ b/tests/phpt/curl/2_curl_setopt.php
@@ -7,130 +7,32 @@ function test_new_options() {
   $c = curl_init();
   curl_setopt($c, CURLOPT_URL, "https://example.com/");
 
-  var_dump(curl_setopt($c, CURLOPT_SSL_VERIFYSTATUS, 1));
-  var_dump(curl_setopt($c, CURLOPT_DISALLOW_USERNAME_IN_URL, 1));
-  var_dump(curl_setopt($c, CURLOPT_CERTINFO, 1));
-  var_dump(curl_setopt($c, CURLOPT_NOPROGRESS, false));
-  var_dump(curl_setopt($c, CURLOPT_NOSIGNAL, false));
-  var_dump(curl_setopt($c, CURLOPT_PATH_AS_IS, true));
-  var_dump(curl_setopt($c, CURLOPT_PIPEWAIT, 1));
-  var_dump(curl_setopt($c, CURLOPT_SASL_IR, 1));
-  var_dump(curl_setopt($c, CURLOPT_EXPECT_100_TIMEOUT_MS, 200));
-  var_dump(curl_setopt($c, CURLOPT_HAPPY_EYEBALLS_TIMEOUT_MS, 1000));
-  var_dump(curl_setopt($c, CURLOPT_HEADEROPT, CURLHEADER_SEPARATE));
-  var_dump(curl_setopt($c, CURLOPT_POSTREDIR, 1));
-  var_dump(curl_setopt($c, CURLOPT_PROTOCOLS, CURLPROTO_HTTPS|CURLPROTO_SCP));
-  var_dump(curl_setopt($c, CURLOPT_REDIR_PROTOCOLS, CURLPROTO_FILE));
-  var_dump(curl_setopt($c, CURLOPT_DNS_SHUFFLE_ADDRESSES, true));
-  var_dump(curl_setopt($c, CURLOPT_HAPROXYPROTOCOL, false));
-  var_dump(curl_setopt($c, CURLOPT_DNS_USE_GLOBAL_CACHE, true));
-  var_dump(curl_setopt($c, CURLOPT_FTPAPPEND, true));
-  var_dump(curl_setopt($c, CURLOPT_FTPLISTONLY, true));
-  var_dump(curl_setopt($c, CURLOPT_KEEP_SENDING_ON_ERROR, false));
-  var_dump(curl_setopt($c, CURLOPT_PROXY_SSL_VERIFYPEER, false));
-  var_dump(curl_setopt($c, CURLOPT_SUPPRESS_CONNECT_HEADERS, true));
-  var_dump(curl_setopt($c, CURLOPT_TCP_FASTOPEN, true));
-  var_dump(curl_setopt($c, CURLOPT_TFTP_NO_OPTIONS, true));
-  // var_dump(curl_setopt($c, CURLOPT_SSH_COMPRESSION, true));       // got 48 error
-  // var_dump(curl_setopt($c, CURLOPT_SSL_FALSESTART, false));       // got 4 error
-
-  var_dump(curl_setopt($c, CURLOPT_HTTP09_ALLOWED, false));
-  //var_dump(@curl_setopt($c, CURLOPT_MAIL_RCPT_ALLLOWFAILS, true)); // got warning and NULL from php
-  //var_dump(@curl_setopt($c, CURLOPT_MAXAGE_CONN, 30));             // got warning and NULL from php
-  //var_dump(curl_setopt($c, CURLOPT_MAXFILESIZE_LARGE, 1<<58));     // got NULL from php
-  //var_dump(curl_setopt($c, CURLOPT_MAXLIFETIME_CONN, 30));         // got NULL from php
-  var_dump(curl_setopt($c, CURLOPT_SOCKS5_AUTH, CURLAUTH_GSSAPI));
-  var_dump(curl_setopt($c, CURLOPT_SSL_OPTIONS, CURLSSLOPT_ALLOW_BEAST | CURLSSLOPT_NO_PARTIALCHAIN));
-  var_dump(curl_setopt($c, CURLOPT_PROXY_SSL_OPTIONS, CURLSSLOPT_ALLOW_BEAST | CURLSSLOPT_NO_PARTIALCHAIN));
-  var_dump(curl_setopt($c, CURLOPT_PROXY_SSL_VERIFYHOST, 2));
-  
-  test_proxy_ssl_version_option(); // testing CURLOPT_PROXY_SSLVERSION option
-
-  //var_dump(curl_setopt($c, CURLOPT_STREAM_WEIGHT, 20)); // dont work (very bad)
-
-  var_dump(curl_setopt($c, CURLOPT_TIMEVALUE, 300));
-  var_dump(curl_setopt($c, CURLOPT_TIMEVALUE_LARGE, 1<<12));
-  var_dump(curl_setopt($c, CURLOPT_TIMECONDITION, CURL_TIMECOND_IFUNMODSINCE));
-  var_dump(curl_setopt($c, CURLOPT_UPKEEP_INTERVAL_MS, 10000));
-  var_dump(curl_setopt($c, CURLOPT_UPLOAD_BUFFERSIZE, 100000));
-  var_dump(curl_setopt($c, CURLOPT_SSH_AUTH_TYPES, CURLSSH_AUTH_NONE)); // got 48 error
-  var_dump(curl_setopt($c, CURLOPT_CONNECT_TO, ['example.com: server1.example.com']));
-  var_dump(curl_setopt($c, CURLOPT_PROXYHEADER, ["http://proxy.example.com:80"]));
-  var_dump(curl_setopt($c, CURLOPT_ENCODING, "gzip"));
-  var_dump(curl_setopt($c, CURLOPT_ABSTRACT_UNIX_SOCKET, "smth"));
-  var_dump(curl_setopt($c, CURLOPT_DEFAULT_PROTOCOL, "https"));
-
-  // var_dump(curl_setopt($c, CURLOPT_DNS_INTERFACE, "eth0")); // got 48 error
-  var_dump(curl_setopt($c, CURLOPT_KEYPASSWD, "smth"));
-  var_dump(curl_setopt($c, CURLOPT_LOGIN_OPTIONS, "AUTH=*"));
-  var_dump(curl_setopt($c, CURLOPT_PINNEDPUBLICKEY, "sha256//smth"));
-  var_dump(curl_setopt($c, CURLOPT_PRE_PROXY, "smth"));
-  var_dump(curl_setopt($c, CURLOPT_PROXY_SERVICE_NAME, "smth"));
-  var_dump(curl_setopt($c, CURLOPT_PROXY_CAINFO, "smth"));
-  var_dump(curl_setopt($c, CURLOPT_PROXY_CAPATH, "smth"));
-  var_dump(curl_setopt($c, CURLOPT_PROXY_KEYPASSWD, "smth"));
-  var_dump(curl_setopt($c, CURLOPT_PROXY_PINNEDPUBLICKEY, "sha256//smth"));
-  
-  echo "creating pem file\n...";
-  $filename = "test";
-  exec("touch ./$filename.pem && echo 'smth' > $filename.pem");
-  var_dump(curl_setopt($c, CURLOPT_PROXY_SSLCERT, "$filename.pem"));
-  var_dump(curl_setopt($c, CURLOPT_PROXY_SSLCERTTYPE, "$filename.pem"));
-
-  var_dump(curl_setopt($c, CURLOPT_PROXY_SSL_CIPHER_LIST, "TLSv1"));
-  // var_dump(curl_setopt($c, CURLOPT_PROXY_TLS13_CIPHERS, "kDHE")); // got 4 error
-  var_dump(curl_setopt($c, CURLOPT_PROXY_SSLKEY, "$filename.pem"));
-  var_dump(curl_setopt($c, CURLOPT_PROXY_SSLKEYTYPE, "PEM"));
-  // var_dump(curl_setopt($c, CURLOPT_PROXY_TLSAUTH_PASSWORD, "smth")); // got 48 error
-  // var_dump(curl_setopt($c, CURLOPT_PROXY_TLSAUTH_TYPE, "SRP")); // got 48 error, needs OpenSSL with TLS-SRP
-  // var_dump(curl_setopt($c, CURLOPT_SASL_AUTHZID, "Ursel")); // got NULL from PHP
-  var_dump(curl_setopt($c, CURLOPT_SERVICE_NAME, "custom"));
-  // var_dump(curl_setopt($c, CURLOPT_SSH_HOST_PUBLIC_KEY_SHA256, "smth")); // got 48 error, needs libssh2
-  var_dump(curl_setopt($c, CURLOPT_SSL_EC_CURVES, "smth"));
-  // var_dump(curl_setopt($c, CURLOPT_TLS13_CIPHERS, "smth")); // got 4 error (doesn't supported)
-  var_dump(curl_setopt($c, CURLOPT_UNIX_SOCKET_PATH, "smth"));
-  var_dump(curl_setopt($c, CURLOPT_XOAUTH2_BEARER, "smth"));
-
+  // var_dump(curl_setopt($c, CURLOPT_SSL_VERIFYSTATUS, 1));
+  // var_dump(curl_setopt($c, CURLOPT_DISALLOW_USERNAME_IN_URL, 1));
+  // var_dump(curl_setopt($c, CURLOPT_CERTINFO, 1));
+  // var_dump(curl_setopt($c, CURLOPT_NOPROGRESS, false));
+  // var_dump(curl_setopt($c, CURLOPT_NOSIGNAL, false));
+  // var_dump(curl_setopt($c, CURLOPT_PATH_AS_IS, true));
+  // var_dump(curl_setopt($c, CURLOPT_PIPEWAIT, 1));
+  // var_dump(curl_setopt($c, CURLOPT_SASL_IR, 1));
+  // var_dump(curl_setopt($c, CURLOPT_EXPECT_100_TIMEOUT_MS, 200));
+  // var_dump(curl_setopt($c, CURLOPT_HAPPY_EYEBALLS_TIMEOUT_MS, 1000));
+  // var_dump(curl_setopt($c, CURLOPT_HEADEROPT, CURLHEADER_SEPARATE));
+  // var_dump(curl_setopt($c, CURLOPT_POSTREDIR, 1));
+  // var_dump(curl_setopt($c, CURLOPT_PROTOCOLS, CURLPROTO_HTTPS|CURLPROTO_SCP));
+  // var_dump(curl_setopt($c, CURLOPT_REDIR_PROTOCOLS, CURLPROTO_FILE));
+  // var_dump(curl_setopt($c, CURLOPT_DNS_SHUFFLE_ADDRESSES, true));
+  // var_dump(curl_setopt($c, CURLOPT_HAPROXYPROTOCOL, true));
+  // var_dump(curl_setopt($c, CURLOPT_DNS_USE_GLOBAL_CACHE, true));
+  // var_dump(curl_setopt($c, CURLOPT_FTPAPPEND, true));
+  // var_dump(curl_setopt($c, CURLOPT_FTPLISTONLY, true));
+  // var_dump(curl_setopt($c, CURLOPT_KEEP_SENDING_ON_ERROR, false));
+  // var_dump(curl_setopt($c, CURLOPT_PROXY_SSL_VERIFYPEER, false));
+  // var_dump(curl_setopt($c, CURLOPT_SUPPRESS_CONNECT_HEADERS, true));
+  // var_dump(curl_setopt($c, CURLOPT_TCP_FASTOPEN, true));
+  // var_dump(curl_setopt($c, CURLOPT_TFTP_NO_OPTIONS, true));
+  var_dump(curl_setopt($c, CURLOPT_SSH_COMPRESSION, true));
   var_dump(curl_exec($c) == true);
-  curl_close($c);
-  //exec("rm ./$filename.pem");
-  //echo "deleting $filename.pem file\n";
-}
-
-function test_stream_options() {
-  $c = curl_init("http://localhost:8080");
-  $page_info = 'phpinfo()';
-  $filename = "kphp_simple_page.php";
-  #ifndef KPHP
-  $filename = "php_simple_page.php";
-  #endif
-  $cmd = "nohup php -S localhost:8080 ./$filename > /dev/null 2>&1 & echo $!";
-  $fh = fopen("file.txt", "w+");
-  $length = 0;
-  $callback = function ($ch, $str) use ($length) {
-      $length += strlen($str);
-      if ($length >= 100) return -1;
-      return $length;
-  };
-
-  // var_dump(curl_setopt($c, CURLOPT_WRITEHEADER, $fh));
-  // var_dump(curl_setopt($c, CURLOPT_HEADERFUNCTION, $callback));
-  var_dump(curl_setopt($c, CURLOPT_WRITEFUNCTION, $callback));
-  var_dump(curl_setopt($c, CURLOPT_FILE, $fh));
-
-  exec("touch $filename && echo \"<?php\n echo '$page_info';\" > .$filename");
-  exec($cmd, $op);
-  var_dump(curl_exec($c));
-
-  #ifndef KPHP
-  echo "hello from PHP\n";
-  #endif
-
-  // var_dump($fh);
-  // exec("kill $op[0]");
-  // fwrite(fopen("./test.txt", "w+"), $fh);
-  // curl_close($c);
-  // exec("rm ./simple_page.php");
 }
 
 function test_long_options() {
@@ -151,6 +53,46 @@ function test_long_options() {
   var_dump(curl_setopt($c, CURLOPT_TCP_KEEPIDLE, 5));
   var_dump(curl_setopt($c, CURLOPT_TCP_KEEPINTVL, 12));
 
+  // new
+  // var_dump(curl_setopt($c, CURLOPT_NOPROGRESS, false));
+  // var_dump(curl_setopt($c, CURLOPT_NOSIGNAL, false));
+  // var_dump(curl_setopt($c, CURLOPT_PATH_AS_IS, 1));
+  // var_dump(curl_setopt($c, CURLOPT_PIPEWAIT, 1));
+  // var_dump(curl_setopt($c, CURLOPT_SASL_IR,  1));
+
+  // var_dump(curl_setopt($c, CURLOPT_EXPECT_100_TIMEOUT_MS, 100));
+  // var_dump(curl_setopt($c, CURLOPT_HAPPY_EYEBALLS_TIMEOUT_MS, 300));
+  // var_dump(curl_setopt($c, CURLOPT_HEADEROPT, CURLHEADER_SEPARATE));
+
+  // var_dump(curl_setopt($c, CURLOPT_POSTREDIR, CURL_REDIR_POST_301 | CURL_REDIR_POST_302));
+  // var_dump(curl_setopt($c, CURLOPT_POSTREDIR, CURL_REDIR_POST_ALL));
+  // var_dump(curl_setopt($c, CURLOPT_PROTOCOLS, CURLPROTO_HTTP | CURLPROTO_FTP));
+  // var_dump(curl_setopt($c, CURLOPT_PROTOCOLS, CURLPROTO_ALL));
+  // var_dump(curl_setopt($c, CURLOPT_REDIR_PROTOCOLS, CURLPROTO_DICT | CURLPROTO_SMTP));
+  // var_dump(curl_setopt($c, CURLOPT_REDIR_PROTOCOLS, CURLPROTO_ALL));
+
+  // var_dump(curl_setopt($c, CURLOPT_DNS_SHUFFLE_ADDRESSES, true));
+  // var_dump(curl_setopt($c, CURLOPT_HAPROXYPROTOCOL, true));
+  // var_dump(curl_setopt($c, CURLOPT_DNS_USE_GLOBAL_CACHE, true));
+  // var_dump(curl_setopt($c, CURLOPT_FTPAPPEND, true));
+  // var_dump(curl_setopt($c, CURLOPT_FTPLISTONLY, true));
+  // var_dump(curl_setopt($c, CURLOPT_KEEP_SENDING_ON_ERROR, true));
+  // var_dump(curl_setopt($c, CURLOPT_PROXY_SSL_VERIFYPEER, false));
+  // var_dump(curl_setopt($c, CURLOPT_SUPPRESS_CONNECT_HEADERS, true));
+  // var_dump(curl_setopt($c, CURLOPT_TCP_FASTOPEN, true));
+  // var_dump(curl_setopt($c, CURLOPT_TFTP_NO_OPTIONS, true));
+  // var_dump(curl_setopt($c, CURLOPT_TCP_FASTOPEN, true));
+
+  // var_dump(curl_setopt($c, CURLOPT_SOCKS5_AUTH, CURLAUTH_BASIC));
+  // var_dump(curl_setopt($c, CURLOPT_SSL_OPTIONS, CURLSSLOPT_ALLOW_BEAST));
+  // var_dump(curl_setopt($c, CURLOPT_PROXY_SSL_OPTIONS, CURLSSLOPT_NO_REVOKE));
+  // var_dump(curl_setopt($c, CURLOPT_PROXY_SSL_VERIFYHOST, 1));
+
+  // var_dump(curl_setopt($c, CURLOPT_STREAM_WEIGHT, 32));
+  // var_dump(curl_setopt($c, CURLOPT_TIMEVALUE, 1577833200));
+  // var_dump(curl_setopt($c, CURLOPT_TIMECONDITION, CURL_TIMECOND_IFMODSINCE));
+  // var_dump(curl_setopt($c, CURLOPT_TIMEVALUE_LARGE, 1577833200));
+
   curl_close($c);
 }
 
@@ -164,7 +106,29 @@ function test_string_options() {
   var_dump(curl_setopt($c, CURLOPT_PROXY, true));
   var_dump(curl_setopt($c, CURLOPT_RANGE, false));
 
-  
+  // new
+  // var_dump(curl_setopt($c, CURLOPT_ABSTRACT_UNIX_SOCKET, "/tmp/foo.sock"));
+  // var_dump(curl_setopt($c, CURLOPT_DEFAULT_PROTOCOL, "https"));
+  // var_dump(curl_setopt($c, CURLOPT_DEFAULT_PROTOCOL, NULL));
+  // var_dump(curl_setopt($c, CURLOPT_ENCODING, ""));
+  // var_dump(curl_setopt($c, CURLOPT_KEYPASSWD, "whocare"));
+  // var_dump(curl_setopt($c, CURLOPT_KRB4LEVEL, "private"));
+  // var_dump(curl_setopt($c, CURLOPT_LOGIN_OPTIONS, "AUTH=*"));
+  // var_dump(curl_setopt(
+  //   $c, 
+  //   CURLOPT_PINNEDPUBLICKEY, 
+  //   "sha256//YhKJKSzoTt2b5FP18fvpHo7fJYqQCjAa3HWY3tvRMwE=;sha256//t62CeU2tQiqkexU74Gxa2eg7fRbEgoChTociMee9wno="
+  // ));
+  // var_dump(curl_setopt($c, CURLOPT_PRE_PROXY, "https://example.com/file.txt"));
+  // var_dump(curl_setopt($c, CURLOPT_PROXY_SERVICE_NAME, "custom"));
+  // var_dump(curl_setopt($c, CURLOPT_PROXY_CAPATH, "/tmp/"));
+  // var_dump(curl_setopt($c, CURLOPT_PROXY_CRLFILE, "/tmp/foo.pem"));
+  // var_dump(curl_setopt($c, CURLOPT_PROXY_KEYPASSWD, "whocare"));
+  // var_dump(curl_setopt(
+  //   $c, 
+  //   CURLOPT_PROXY_PINNEDPUBLICKEY, 
+  //   "sha256//YhKJKSzoTt2b5FP18fvpHo7fJYqQCjAa3HWY3tvRMwE=;sha256//t62CeU2tQiqkexU74Gxa2eg7fRbEgoChTociMee9wno="
+  // ));
   curl_close($c);
 }
 
@@ -213,6 +177,8 @@ function test_proxy_ssl_version_option() {
 
   var_dump(curl_setopt($c, CURLOPT_PROXY_SSLVERSION, CURL_SSLVERSION_DEFAULT));
   var_dump(curl_setopt($c, CURLOPT_PROXY_SSLVERSION, CURL_SSLVERSION_TLSv1));
+  var_dump(curl_setopt($c, CURLOPT_PROXY_SSLVERSION, CURL_SSLVERSION_SSLv2));
+  var_dump(curl_setopt($c, CURLOPT_PROXY_SSLVERSION, CURL_SSLVERSION_SSLv3));
   var_dump(curl_setopt($c, CURLOPT_PROXY_SSLVERSION, CURL_SSLVERSION_TLSv1_0));
   var_dump(curl_setopt($c, CURLOPT_PROXY_SSLVERSION, CURL_SSLVERSION_TLSv1_1));
   var_dump(curl_setopt($c, CURLOPT_PROXY_SSLVERSION, CURL_SSLVERSION_TLSv1_2));
@@ -343,7 +309,7 @@ function test_setopt_array() {
 function test_bad_option() {
   $c = curl_init();
 
-  var_dump(kphp && curl_setopt($c, -123, 1));
+  // var_dump(kphp && curl_setopt($c, -123, 1));
 
   curl_close($c);
 }
@@ -406,26 +372,25 @@ function test_read_function_option() {
 }
 
 test_new_options();
-// test_stream_options();
-
-test_long_options();
-test_string_options();
-test_linked_list_options();
-
-test_proxy_type_option();
-// test_proxy_ssl_version_option();
-test_ssl_version_option();
-test_auth_option();
-test_ip_resolve_option();
-test_ftp_auth_option();
-test_ftp_file_method_option();
-test_post_fields_option();
-test_max_recv_speed();
-test_special_options();
-
-test_setopt_array();
-
-test_bad_option();
+
+// test_long_options();
+// test_string_options();
+// test_linked_list_options();
+
+// test_proxy_type_option();
+// //test_proxy_ssl_version_option();
+// test_ssl_version_option();
+// test_auth_option();
+// test_ip_resolve_option();
+// test_ftp_auth_option();
+// test_ftp_file_method_option();
+// test_post_fields_option();
+// test_max_recv_speed();
+// test_special_options();
+
+// test_setopt_array();
+
+// test_bad_option();
 
 // test_write_function_option();
 // test_write_header_function_option();
diff --git a/tests/python/tests/curl/test_curl_resumable.py b/tests/python/tests/curl/test_curl_resumable.py
index 2e597142..8db9f6b5 100644
--- a/tests/python/tests/curl/test_curl_resumable.py
+++ b/tests/python/tests/curl/test_curl_resumable.py
@@ -53,7 +53,7 @@ class TestCurlResumable(CurlTestCase):
 
     def test_curl_resumable_nonexistent_url(self):
         self.assertEqual(self._curl_request("nonexistent_url"), {
-            "exec_result": False
+            "exec_result": ''
         })
 
     def test_curl_resumable_connection_only_success(self):
@@ -63,5 +63,5 @@ class TestCurlResumable(CurlTestCase):
 
     def test_curl_resumable_connection_only_fail(self):
         self.assertEqual(self._curl_request("nonexistent_url", connect_only=True), {
-            "exec_result": False
+            "exec_result": ''
         })
